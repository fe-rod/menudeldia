@using System.Configuration
@using MenuDelDia.Presentacion.Areas.HelpPage.ModelDescriptions
@using MenuDelDia.Presentacion.Helpers
@model MenuDelDia.Presentacion.Models.RestaurantModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Restaurant</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogoPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="file" name="file" class="form-control" />
                @if (Model != null && string.IsNullOrEmpty(Model.LogoPath) == false)
                {
                    <a id="lnkDeleteImg" class="btn btn-danger" href="#">Borrar</a>
                    <a id="lnkViewImg" class="btn btn-default" target="blank" href="@WebPathHelper.CreateFullUrl(Path.Combine(ConfigurationManager.AppSettings["FolderLogos"], Model.LogoPath))">Ver</a>
                }
                @Html.HiddenFor(model => model.ClearLogoPath)
                @Html.ValidationMessageFor(model => model.LogoPath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cards, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th>Tarjeta</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            for (var i = 0; i < Model.Cards.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.CheckBox("Cards[" + (i + 10) + "].Selected", Model.Cards[i].Selected)
                                    </td>
                                    <td>
                                        @Html.Hidden("Cards.Index", (i + 10))
                                        @Html.Hidden("Cards[" + (i + 10) + "].Id", Model.Cards[i].Id)
                                        @Model.Cards[i].Name ( @Model.Cards[i].Type )
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#lnkDeleteImg").click(function (e) {
                e.preventDefault();
                $("#@Html.IdFor(m=>m.ClearLogoPath)").val("True");
                $("#lnkViewImg").hide();
                $(this).hide();
            });
        });
    </script>
}
