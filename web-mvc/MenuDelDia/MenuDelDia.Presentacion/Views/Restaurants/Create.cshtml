@using MenuDelDia.Presentacion.Resources
@model MenuDelDia.Presentacion.Models.RestaurantModel

@{
    ViewBag.Title = "Create";
}

<h2>@ViewResources.CreateTitle</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Restaurant</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailUserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailUserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailUserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogoPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="file" name="file" class="form-control" />
                @Html.ValidationMessageFor(model => model.LogoPath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cards, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.Cards.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.CheckBox("Cards[" + (i + 10) + "].Selected", Model.Cards[i].Selected)
                                </td>
                                <td>
                                    @Html.Hidden("Cards.Index", (i + 10))
                                    @Html.Hidden("Cards[" + (i + 10) + "].Id", Model.Cards[i].Id)
                                    @Html.Hidden("Cards[" + (i + 10) + "].Name", Model.Cards[i].Name)
                                    @Model.Cards[i].Name ( @Model.Cards[i].Type )
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.Tags.Count; i = i + 4)
                        {
                            <tr>
                                @for (var j = i; ((j < (i + 4)) && (j < Model.Tags.Count)); j++)
                                {
                                    <td>
                                        @Html.Hidden("Tags.Index", (j + 10))
                                        @Html.CheckBox("Tags[" + (j + 10) + "].Selected", Model.Tags[j].Selected)
                                        @Html.Hidden("Tags[" + (j + 10) + "].Id", Model.Tags[j].Id)
                                        @Model.Tags[j].Name
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.EditorFor(model => model.Active)
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@ViewResources.Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(ViewResources.Back, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
