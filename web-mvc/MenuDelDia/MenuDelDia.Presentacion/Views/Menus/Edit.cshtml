@model MenuDelDia.Presentacion.Models.MenuModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Menu</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ingredients, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ingredients, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table style=" width:100%; max-width: 280px">
                    <thead>
                        <tr>
                            <th><label for="@Html.IdFor(m => m.MenuDays.Monday)">L</label></th>
                            <th><label for="@Html.IdFor(m => m.MenuDays.Tuesday)">M</label></th>
                            <th><label for="@Html.IdFor(m => m.MenuDays.Wednesday)">M</label></th>
                            <th><label for="@Html.IdFor(m => m.MenuDays.Thursday)">J</label></th>
                            <th><label for="@Html.IdFor(m => m.MenuDays.Friday)">V</label></th>
                            <th><label for="@Html.IdFor(m => m.MenuDays.Saturday)">S</label></th>
                            <th><label for="@Html.IdFor(m => m.MenuDays.Sunday)">D</label></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Html.CheckBoxFor(m => m.MenuDays.Monday)</td>
                            <td>@Html.CheckBoxFor(m => m.MenuDays.Tuesday)</td>
                            <td>@Html.CheckBoxFor(m => m.MenuDays.Wednesday)</td>
                            <td>@Html.CheckBoxFor(m => m.MenuDays.Thursday)</td>
                            <td>@Html.CheckBoxFor(m => m.MenuDays.Friday)</td>
                            <td>@Html.CheckBoxFor(m => m.MenuDays.Saturday)</td>
                            <td>@Html.CheckBoxFor(m => m.MenuDays.Sunday)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecialDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpecialDay.Date, new { htmlAttributes = new { @class = "form-control datepicker" } })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.SpecialDay.Recurrent, new { htmlAttributes = new { @class = "" } })
                    @Html.LabelFor(model => model.SpecialDay.Recurrent, htmlAttributes: new { @class = "control-label" })
                </div>
                @Html.ValidationMessageFor(model => model.SpecialDay.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Locations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.Locations.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.Hidden("Locations.Index", (i + 10))
                                    @Html.CheckBox("Locations[" + (i + 10) + "].Selected", Model.Locations[i].Selected)
                                </td>
                                <td>
                                    @Html.Hidden("Locations[" + (i + 10) + "].Id", Model.Locations[i].Id)
                                    @Html.Hidden("Locations[" + (i + 10) + "].Name", Model.Locations[i].Name)
                                    <label for="@string.Format("Locations_{0}__Selected", (i + 10))"> @Model.Locations[i].Name</label>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.Tags.Count; i = i + 4)
                        {
                            <tr>
                                @for (var j = i; ((j < (i + 4)) && (j < Model.Tags.Count)); j++)
                                {
                                    <td>
                                        @Html.Hidden("Tags.Index", (j + 10))
                                        @Html.CheckBox("Tags[" + (j + 10) + "].Selected", Model.Tags[j].Selected)
                                        @Html.Hidden("Tags[" + (j + 10) + "].Id", Model.Tags[j].Id)
                                        @Html.Hidden("Tags[" + (j + 10) + "].Name", Model.Tags[j].Name)
                                        @Model.Tags[j].Name
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').mask("99/99/9999", { placeholder: "dd/mm/yyyy" });
            $('.datepicker').datepicker({
                format: "dd/mm/yyyy",
                weekStart: 1,
            });
        });
    </script>
}


