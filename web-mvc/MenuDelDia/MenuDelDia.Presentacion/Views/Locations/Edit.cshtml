@model MenuDelDia.Presentacion.Models.LocationModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Location</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Streets, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Streets, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Streets, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Delivery)
                    @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Ubicación </label>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Latitude)
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Longitude)
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                <div id="map_canvas" class="form-control" style="width: 50%; height: 300px"></div>
            </div>
        </div>
            
        <div class="form-group">
            @Html.LabelFor(model => model.OpenDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            for (var i = 0; i < Model.OpenDays.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.Hidden("OpenDays.Index", (i + 10))
                                        @Html.CheckBox("OpenDays[" + (i + 10) + "].Open", Model.OpenDays[i].Open)
                                    </td>
                                    <td>
                                        @Html.Hidden("OpenDays[" + (i + 10) + "].DayOfWeek", Model.OpenDays[i].DayOfWeek)
                                        @Model.OpenDays[i].DayOfWeek
                                    </td>
                                    <td>
                                        @Html.TextBox("OpenDays[" + (i + 10) + "].OpenHour", Model.OpenDays[i].OpenHour)
                                        @Html.TextBox("OpenDays[" + (i + 10) + "].OpenMinutes", Model.OpenDays[i].OpenMinutes)
                                    </td>
                                    <td>
                                        @Html.TextBox("OpenDays[" + (i + 10) + "].CloseHour", Model.OpenDays[i].CloseHour)
                                        @Html.TextBox("OpenDays[" + (i + 10) + "].CloseMinutes", Model.OpenDays[i].CloseMinutes)
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCBch-yBM77R9QSsw9_xG5qeiMv261Eeqs"></script>
    <script type="text/javascript">
        var markers = [];
        function setAllMap(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }
        function clearMarkers() {
            setAllMap(null);
        }
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }
        function createMarker(map, lat, lng) {
            var marker = new google.maps.Marker({
                map: map,
                position: new google.maps.LatLng(lat, lng)
            });
            markers.push(marker);
            $("#Latitude").val(lat.toString().replace(".", ","));
            $("#Longitude").val(lng.toString().replace(".", ","));
        }

        function initialize() {
            var latitude = $("#Latitude").val().replace(",", ".");
            var longitude = $("#Longitude").val().replace(",", ".");

            var mapDiv = document.getElementById('map_canvas');
            var map = new google.maps.Map(mapDiv, {
                center: new google.maps.LatLng(latitude, longitude),
                zoom: 13,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            createMarker(map, latitude, longitude);

            google.maps.event.addListener(map, 'click', function (event) {

                deleteMarkers();
                var marker = new google.maps.Marker({
                    map: map,
                    position: event.latLng,
                    draggable: true
                });
                markers.push(marker);
                $("#Latitude").val(event.latLng.lat().toString().replace(".", ","));
                $("#Longitude").val(event.latLng.lng().toString().replace(".", ","));
            });
        }

        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
}
