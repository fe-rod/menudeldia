@using MenuDelDia.Presentacion.Helpers
@using MenuDelDia.Presentacion.Resources
@model MenuDelDia.Presentacion.Models.LocationModel

@{
    ViewBag.Title = "Edit";
}

<h2>@ViewResources.EditTitle</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Location</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        

        <div class="form-group">
            @Html.LabelFor(model => model.Identifier, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Identifier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Identifier, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.Streets, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Streets, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Streets, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Delivery)
                    @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Ubicación </label>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Latitude)
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Longitude)
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                <div id="map_canvas" class="form-control" style="width: 50%; height: 300px"></div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> @Html.LabelFor(model => model.OpenDays, htmlAttributes: new { @class = "control-label col-md-2" }) </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DayOfWeek, (IEnumerable<SelectListItem>)ViewBag.DayOfWeeks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DropDownListFor(model => model.OpenHour, EnumerableHelper.Range(0, 23).Select(i => new SelectListItem { Text = i.ToString("00"), Value = i.ToString() }), new { htmlAttributes = new { @class = "form-control" } })
                @Html.DropDownListFor(model => model.OpenMinutes, EnumerableHelper.Range(0, 59, x => x + 5).Select(i => new SelectListItem { Text = i.ToString("00"), Value = i.ToString() }), new { htmlAttributes = new { @class = "form-control" } })
                @Html.DropDownListFor(model => model.CloseHour, EnumerableHelper.Range(0, 23).Select(i => new SelectListItem { Text = i.ToString("00"), Value = i.ToString() }), new { htmlAttributes = new { @class = "form-control" } })
                @Html.DropDownListFor(model => model.CloseMinutes, EnumerableHelper.Range(0, 59, x => x + 5).Select(i => new SelectListItem { Text = i.ToString("00"), Value = i.ToString() }), new { htmlAttributes = new { @class = "form-control" } })

                @Html.HiddenFor(model => model.RemoveDayOfWeek)

                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })

                <a id="lnkAddDayOfWeek" href="#" class="btn btn-default">Agregar día</a>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OpenDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 " id="divOpenDays">
                @Html.Partial("_OpenDays", Model)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.Tags.Count; i = i + 4)
                        {
                            <tr>
                                @for (var j = i; ((j < (i + 4)) && (j < Model.Tags.Count)); j++)
                                {
                                    <td>
                                        @Html.Hidden("Tags.Index", (j + 10))
                                        @Html.CheckBox("Tags[" + (j + 10) + "].Selected", Model.Tags[j].Selected)
                                        @Html.Hidden("Tags[" + (j + 10) + "].Id", Model.Tags[j].Id)
                                        @Model.Tags[j].Name
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@ViewResources.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(ViewResources.Back, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCBch-yBM77R9QSsw9_xG5qeiMv261Eeqs"></script>
    <script type="text/javascript">
        var markers = [];
        function setAllMap(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }
        function clearMarkers() {
            setAllMap(null);
        }
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }
        function createMarker(map, lat, lng) {
            var marker = new google.maps.Marker({
                map: map,
                position: new google.maps.LatLng(lat, lng)
            });
            markers.push(marker);
            $("#Latitude").val(lat.toString().replace(".", ","));
            $("#Longitude").val(lng.toString().replace(".", ","));
        }

        function initialize() {
            var latitude = $("#Latitude").val().replace(",", ".");
            var longitude = $("#Longitude").val().replace(",", ".");

            var mapDiv = document.getElementById('map_canvas');
            var map = new google.maps.Map(mapDiv, {
                center: new google.maps.LatLng(latitude, longitude),
                zoom: 13,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            createMarker(map, latitude, longitude);

            google.maps.event.addListener(map, 'click', function (event) {

                deleteMarkers();
                var marker = new google.maps.Marker({
                    map: map,
                    position: event.latLng,
                    draggable: true
                });
                markers.push(marker);
                $("#Latitude").val(event.latLng.lat().toString().replace(".", ","));
                $("#Longitude").val(event.latLng.lng().toString().replace(".", ","));
            });
        }

        google.maps.event.addDomListener(window, 'load', initialize);



        $(document).ready(function () {
            $("#lnkAddDayOfWeek").click(function (e) {
                e.preventDefault();
                var form = $('form');
                $.ajax({
                    url: '@Url.Action("AddDayOfWeek","Locations")',
                    type: 'POST',
                    data: form.serialize(),
                    success: function (data) {
                        $("#divOpenDays").html(data);
                        $("#@Html.IdFor(m => m.OpenHour)").val(0);
                        $("#@Html.IdFor(m => m.OpenMinutes)").val(0);
                        $("#@Html.IdFor(m => m.CloseHour)").val(0);
                        $("#@Html.IdFor(m => m.CloseMinutes)").val(0);
                    },
                    error: function () { }
                });
            });

            $("#divOpenDays").on("click", ".lnkRemoveDayOfWeek", function (e) {
                e.preventDefault();
                $("#@Html.IdFor(m => m.RemoveDayOfWeek)").val($(this).attr("id"));
                $.ajax({
                    url: '@Url.Action("RemoveDayOfWeek","Locations")',
                    type: 'POST',
                    data: $('form').serialize(),
                    success: function (data) { $("#divOpenDays").html(data); },
                    error: function () { }
                });
            });
        });
    </script>
}
